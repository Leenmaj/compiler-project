Terminals which are not used

   BEGIN_PROGRAM
   COMMA


State 42 conflicts: 2 shift/reduce
State 69 conflicts: 2 shift/reduce
State 70 conflicts: 2 shift/reduce


Grammar

    0 $accept: program $end

    1 program: PROGRAM IDENT SEMICOLON declarations statements END_PROGRAM

    2 declarations: VAR declaration SEMICOLON declarations
    3             | /* empty */

    4 declaration: IDENT COLON type

    5 type: INTEGER
    6     | ARRAY L_PAREN NUMBER R_PAREN OF INTEGER

    7 conditional: IF condition THEN statements ENDIF
    8            | IF condition THEN statements ELSE statements ENDIF

    9 loop: WHILE condition LOOP statements ENDLOOP

   10 statements: statement SEMICOLON statements
   11           | statement
   12           | /* empty */

   13 statement: assignment
   14          | conditional
   15          | loop
   16          | READ IDENT
   17          | WRITE expression

   18 expression: expression ADD term
   19           | expression SUB term
   20           | term

   21 term: term MULT factor
   22     | term DIV factor
   23     | factor

   24 factor: NUMBER
   25       | IDENT
   26       | L_PAREN expression R_PAREN

   27 condition: TRUE
   28          | FALSE
   29          | expression relational_operator expression
   30          | NOT condition
   31          | condition AND condition
   32          | condition OR condition
   33          | /* empty */

   34 relational_operator: EQ
   35                    | NEQ
   36                    | LT
   37                    | GT
   38                    | LTE
   39                    | GTE

   40 assignment: IDENT ASSIGN expression


Terminals, with rules where they appear

$end (0) 0
error (256)
SUB (258) 19
ADD (259) 18
DIV (260) 22
MULT (261) 21
ASSIGN (262) 40
PROGRAM (263) 1
BEGIN_PROGRAM (264)
END_PROGRAM (265) 1
INTEGER (266) 5 6
ARRAY (267) 6
OF (268) 6
IF (269) 7 8
THEN (270) 7 8
ENDIF (271) 7 8
ELSE (272) 8
WHILE (273) 9
LOOP (274) 9
ENDLOOP (275) 9
READ (276) 16
WRITE (277) 17
VAR (278) 2
AND (279) 31
OR (280) 32
NOT (281) 30
TRUE (282) 27
FALSE (283) 28
IDENT (284) 1 4 16 25 40
NUMBER (285) 6 24
EQ (286) 34
NEQ (287) 35
LT (288) 36
GT (289) 37
LTE (290) 38
GTE (291) 39
SEMICOLON (292) 1 2 10
COLON (293) 4
COMMA (294)
L_PAREN (295) 6 26
R_PAREN (296) 6 26


Nonterminals, with rules where they appear

$accept (42)
    on left: 0
program (43)
    on left: 1, on right: 0
declarations (44)
    on left: 2 3, on right: 1 2
declaration (45)
    on left: 4, on right: 2
type (46)
    on left: 5 6, on right: 4
conditional (47)
    on left: 7 8, on right: 14
loop (48)
    on left: 9, on right: 15
statements (49)
    on left: 10 11 12, on right: 1 7 8 9 10
statement (50)
    on left: 13 14 15 16 17, on right: 10 11
expression (51)
    on left: 18 19 20, on right: 17 18 19 26 29 40
term (52)
    on left: 21 22 23, on right: 18 19 20 21 22
factor (53)
    on left: 24 25 26, on right: 21 22 23
condition (54)
    on left: 27 28 29 30 31 32 33, on right: 7 8 9 30 31 32
relational_operator (55)
    on left: 34 35 36 37 38 39, on right: 29
assignment (56)
    on left: 40, on right: 13


state 0

    0 $accept: . program $end

    PROGRAM  shift, and go to state 1

    program  go to state 2


state 1

    1 program: PROGRAM . IDENT SEMICOLON declarations statements END_PROGRAM

    IDENT  shift, and go to state 3


state 2

    0 $accept: program . $end

    $end  shift, and go to state 4


state 3

    1 program: PROGRAM IDENT . SEMICOLON declarations statements END_PROGRAM

    SEMICOLON  shift, and go to state 5


state 4

    0 $accept: program $end .

    $default  accept


state 5

    1 program: PROGRAM IDENT SEMICOLON . declarations statements END_PROGRAM

    VAR  shift, and go to state 6

    $default  reduce using rule 3 (declarations)

    declarations  go to state 7


state 6

    2 declarations: VAR . declaration SEMICOLON declarations

    IDENT  shift, and go to state 8

    declaration  go to state 9


state 7

    1 program: PROGRAM IDENT SEMICOLON declarations . statements END_PROGRAM

    IF     shift, and go to state 10
    WHILE  shift, and go to state 11
    READ   shift, and go to state 12
    WRITE  shift, and go to state 13
    IDENT  shift, and go to state 14

    $default  reduce using rule 12 (statements)

    conditional  go to state 15
    loop         go to state 16
    statements   go to state 17
    statement    go to state 18
    assignment   go to state 19


state 8

    4 declaration: IDENT . COLON type

    COLON  shift, and go to state 20


state 9

    2 declarations: VAR declaration . SEMICOLON declarations

    SEMICOLON  shift, and go to state 21


state 10

    7 conditional: IF . condition THEN statements ENDIF
    8            | IF . condition THEN statements ELSE statements ENDIF

    NOT      shift, and go to state 22
    TRUE     shift, and go to state 23
    FALSE    shift, and go to state 24
    IDENT    shift, and go to state 25
    NUMBER   shift, and go to state 26
    L_PAREN  shift, and go to state 27

    $default  reduce using rule 33 (condition)

    expression  go to state 28
    term        go to state 29
    factor      go to state 30
    condition   go to state 31


state 11

    9 loop: WHILE . condition LOOP statements ENDLOOP

    NOT      shift, and go to state 22
    TRUE     shift, and go to state 23
    FALSE    shift, and go to state 24
    IDENT    shift, and go to state 25
    NUMBER   shift, and go to state 26
    L_PAREN  shift, and go to state 27

    $default  reduce using rule 33 (condition)

    expression  go to state 28
    term        go to state 29
    factor      go to state 30
    condition   go to state 32


state 12

   16 statement: READ . IDENT

    IDENT  shift, and go to state 33


state 13

   17 statement: WRITE . expression

    IDENT    shift, and go to state 25
    NUMBER   shift, and go to state 26
    L_PAREN  shift, and go to state 27

    expression  go to state 34
    term        go to state 29
    factor      go to state 30


state 14

   40 assignment: IDENT . ASSIGN expression

    ASSIGN  shift, and go to state 35


state 15

   14 statement: conditional .

    $default  reduce using rule 14 (statement)


state 16

   15 statement: loop .

    $default  reduce using rule 15 (statement)


state 17

    1 program: PROGRAM IDENT SEMICOLON declarations statements . END_PROGRAM

    END_PROGRAM  shift, and go to state 36


state 18

   10 statements: statement . SEMICOLON statements
   11           | statement .

    SEMICOLON  shift, and go to state 37

    $default  reduce using rule 11 (statements)


state 19

   13 statement: assignment .

    $default  reduce using rule 13 (statement)


state 20

    4 declaration: IDENT COLON . type

    INTEGER  shift, and go to state 38
    ARRAY    shift, and go to state 39

    type  go to state 40


state 21

    2 declarations: VAR declaration SEMICOLON . declarations

    VAR  shift, and go to state 6

    $default  reduce using rule 3 (declarations)

    declarations  go to state 41


state 22

   30 condition: NOT . condition

    NOT      shift, and go to state 22
    TRUE     shift, and go to state 23
    FALSE    shift, and go to state 24
    IDENT    shift, and go to state 25
    NUMBER   shift, and go to state 26
    L_PAREN  shift, and go to state 27

    $default  reduce using rule 33 (condition)

    expression  go to state 28
    term        go to state 29
    factor      go to state 30
    condition   go to state 42


state 23

   27 condition: TRUE .

    $default  reduce using rule 27 (condition)


state 24

   28 condition: FALSE .

    $default  reduce using rule 28 (condition)


state 25

   25 factor: IDENT .

    $default  reduce using rule 25 (factor)


state 26

   24 factor: NUMBER .

    $default  reduce using rule 24 (factor)


state 27

   26 factor: L_PAREN . expression R_PAREN

    IDENT    shift, and go to state 25
    NUMBER   shift, and go to state 26
    L_PAREN  shift, and go to state 27

    expression  go to state 43
    term        go to state 29
    factor      go to state 30


state 28

   18 expression: expression . ADD term
   19           | expression . SUB term
   29 condition: expression . relational_operator expression

    SUB  shift, and go to state 44
    ADD  shift, and go to state 45
    EQ   shift, and go to state 46
    NEQ  shift, and go to state 47
    LT   shift, and go to state 48
    GT   shift, and go to state 49
    LTE  shift, and go to state 50
    GTE  shift, and go to state 51

    relational_operator  go to state 52


state 29

   20 expression: term .
   21 term: term . MULT factor
   22     | term . DIV factor

    DIV   shift, and go to state 53
    MULT  shift, and go to state 54

    $default  reduce using rule 20 (expression)


state 30

   23 term: factor .

    $default  reduce using rule 23 (term)


state 31

    7 conditional: IF condition . THEN statements ENDIF
    8            | IF condition . THEN statements ELSE statements ENDIF
   31 condition: condition . AND condition
   32          | condition . OR condition

    THEN  shift, and go to state 55
    AND   shift, and go to state 56
    OR    shift, and go to state 57


state 32

    9 loop: WHILE condition . LOOP statements ENDLOOP
   31 condition: condition . AND condition
   32          | condition . OR condition

    LOOP  shift, and go to state 58
    AND   shift, and go to state 56
    OR    shift, and go to state 57


state 33

   16 statement: READ IDENT .

    $default  reduce using rule 16 (statement)


state 34

   17 statement: WRITE expression .
   18 expression: expression . ADD term
   19           | expression . SUB term

    SUB  shift, and go to state 44
    ADD  shift, and go to state 45

    $default  reduce using rule 17 (statement)


state 35

   40 assignment: IDENT ASSIGN . expression

    IDENT    shift, and go to state 25
    NUMBER   shift, and go to state 26
    L_PAREN  shift, and go to state 27

    expression  go to state 59
    term        go to state 29
    factor      go to state 30


state 36

    1 program: PROGRAM IDENT SEMICOLON declarations statements END_PROGRAM .

    $default  reduce using rule 1 (program)


state 37

   10 statements: statement SEMICOLON . statements

    IF     shift, and go to state 10
    WHILE  shift, and go to state 11
    READ   shift, and go to state 12
    WRITE  shift, and go to state 13
    IDENT  shift, and go to state 14

    $default  reduce using rule 12 (statements)

    conditional  go to state 15
    loop         go to state 16
    statements   go to state 60
    statement    go to state 18
    assignment   go to state 19


state 38

    5 type: INTEGER .

    $default  reduce using rule 5 (type)


state 39

    6 type: ARRAY . L_PAREN NUMBER R_PAREN OF INTEGER

    L_PAREN  shift, and go to state 61


state 40

    4 declaration: IDENT COLON type .

    $default  reduce using rule 4 (declaration)


state 41

    2 declarations: VAR declaration SEMICOLON declarations .

    $default  reduce using rule 2 (declarations)


state 42

   30 condition: NOT condition .
   31          | condition . AND condition
   32          | condition . OR condition

    AND  shift, and go to state 56
    OR   shift, and go to state 57

    AND       [reduce using rule 30 (condition)]
    OR        [reduce using rule 30 (condition)]
    $default  reduce using rule 30 (condition)


state 43

   18 expression: expression . ADD term
   19           | expression . SUB term
   26 factor: L_PAREN expression . R_PAREN

    SUB      shift, and go to state 44
    ADD      shift, and go to state 45
    R_PAREN  shift, and go to state 62


state 44

   19 expression: expression SUB . term

    IDENT    shift, and go to state 25
    NUMBER   shift, and go to state 26
    L_PAREN  shift, and go to state 27

    term    go to state 63
    factor  go to state 30


state 45

   18 expression: expression ADD . term

    IDENT    shift, and go to state 25
    NUMBER   shift, and go to state 26
    L_PAREN  shift, and go to state 27

    term    go to state 64
    factor  go to state 30


state 46

   34 relational_operator: EQ .

    $default  reduce using rule 34 (relational_operator)


state 47

   35 relational_operator: NEQ .

    $default  reduce using rule 35 (relational_operator)


state 48

   36 relational_operator: LT .

    $default  reduce using rule 36 (relational_operator)


state 49

   37 relational_operator: GT .

    $default  reduce using rule 37 (relational_operator)


state 50

   38 relational_operator: LTE .

    $default  reduce using rule 38 (relational_operator)


state 51

   39 relational_operator: GTE .

    $default  reduce using rule 39 (relational_operator)


state 52

   29 condition: expression relational_operator . expression

    IDENT    shift, and go to state 25
    NUMBER   shift, and go to state 26
    L_PAREN  shift, and go to state 27

    expression  go to state 65
    term        go to state 29
    factor      go to state 30


state 53

   22 term: term DIV . factor

    IDENT    shift, and go to state 25
    NUMBER   shift, and go to state 26
    L_PAREN  shift, and go to state 27

    factor  go to state 66


state 54

   21 term: term MULT . factor

    IDENT    shift, and go to state 25
    NUMBER   shift, and go to state 26
    L_PAREN  shift, and go to state 27

    factor  go to state 67


state 55

    7 conditional: IF condition THEN . statements ENDIF
    8            | IF condition THEN . statements ELSE statements ENDIF

    IF     shift, and go to state 10
    WHILE  shift, and go to state 11
    READ   shift, and go to state 12
    WRITE  shift, and go to state 13
    IDENT  shift, and go to state 14

    $default  reduce using rule 12 (statements)

    conditional  go to state 15
    loop         go to state 16
    statements   go to state 68
    statement    go to state 18
    assignment   go to state 19


state 56

   31 condition: condition AND . condition

    NOT      shift, and go to state 22
    TRUE     shift, and go to state 23
    FALSE    shift, and go to state 24
    IDENT    shift, and go to state 25
    NUMBER   shift, and go to state 26
    L_PAREN  shift, and go to state 27

    $default  reduce using rule 33 (condition)

    expression  go to state 28
    term        go to state 29
    factor      go to state 30
    condition   go to state 69


state 57

   32 condition: condition OR . condition

    NOT      shift, and go to state 22
    TRUE     shift, and go to state 23
    FALSE    shift, and go to state 24
    IDENT    shift, and go to state 25
    NUMBER   shift, and go to state 26
    L_PAREN  shift, and go to state 27

    $default  reduce using rule 33 (condition)

    expression  go to state 28
    term        go to state 29
    factor      go to state 30
    condition   go to state 70


state 58

    9 loop: WHILE condition LOOP . statements ENDLOOP

    IF     shift, and go to state 10
    WHILE  shift, and go to state 11
    READ   shift, and go to state 12
    WRITE  shift, and go to state 13
    IDENT  shift, and go to state 14

    $default  reduce using rule 12 (statements)

    conditional  go to state 15
    loop         go to state 16
    statements   go to state 71
    statement    go to state 18
    assignment   go to state 19


state 59

   18 expression: expression . ADD term
   19           | expression . SUB term
   40 assignment: IDENT ASSIGN expression .

    SUB  shift, and go to state 44
    ADD  shift, and go to state 45

    $default  reduce using rule 40 (assignment)


state 60

   10 statements: statement SEMICOLON statements .

    $default  reduce using rule 10 (statements)


state 61

    6 type: ARRAY L_PAREN . NUMBER R_PAREN OF INTEGER

    NUMBER  shift, and go to state 72


state 62

   26 factor: L_PAREN expression R_PAREN .

    $default  reduce using rule 26 (factor)


state 63

   19 expression: expression SUB term .
   21 term: term . MULT factor
   22     | term . DIV factor

    DIV   shift, and go to state 53
    MULT  shift, and go to state 54

    $default  reduce using rule 19 (expression)


state 64

   18 expression: expression ADD term .
   21 term: term . MULT factor
   22     | term . DIV factor

    DIV   shift, and go to state 53
    MULT  shift, and go to state 54

    $default  reduce using rule 18 (expression)


state 65

   18 expression: expression . ADD term
   19           | expression . SUB term
   29 condition: expression relational_operator expression .

    SUB  shift, and go to state 44
    ADD  shift, and go to state 45

    $default  reduce using rule 29 (condition)


state 66

   22 term: term DIV factor .

    $default  reduce using rule 22 (term)


state 67

   21 term: term MULT factor .

    $default  reduce using rule 21 (term)


state 68

    7 conditional: IF condition THEN statements . ENDIF
    8            | IF condition THEN statements . ELSE statements ENDIF

    ENDIF  shift, and go to state 73
    ELSE   shift, and go to state 74


state 69

   31 condition: condition . AND condition
   31          | condition AND condition .
   32          | condition . OR condition

    AND  shift, and go to state 56
    OR   shift, and go to state 57

    AND       [reduce using rule 31 (condition)]
    OR        [reduce using rule 31 (condition)]
    $default  reduce using rule 31 (condition)


state 70

   31 condition: condition . AND condition
   32          | condition . OR condition
   32          | condition OR condition .

    AND  shift, and go to state 56
    OR   shift, and go to state 57

    AND       [reduce using rule 32 (condition)]
    OR        [reduce using rule 32 (condition)]
    $default  reduce using rule 32 (condition)


state 71

    9 loop: WHILE condition LOOP statements . ENDLOOP

    ENDLOOP  shift, and go to state 75


state 72

    6 type: ARRAY L_PAREN NUMBER . R_PAREN OF INTEGER

    R_PAREN  shift, and go to state 76


state 73

    7 conditional: IF condition THEN statements ENDIF .

    $default  reduce using rule 7 (conditional)


state 74

    8 conditional: IF condition THEN statements ELSE . statements ENDIF

    IF     shift, and go to state 10
    WHILE  shift, and go to state 11
    READ   shift, and go to state 12
    WRITE  shift, and go to state 13
    IDENT  shift, and go to state 14

    $default  reduce using rule 12 (statements)

    conditional  go to state 15
    loop         go to state 16
    statements   go to state 77
    statement    go to state 18
    assignment   go to state 19


state 75

    9 loop: WHILE condition LOOP statements ENDLOOP .

    $default  reduce using rule 9 (loop)


state 76

    6 type: ARRAY L_PAREN NUMBER R_PAREN . OF INTEGER

    OF  shift, and go to state 78


state 77

    8 conditional: IF condition THEN statements ELSE statements . ENDIF

    ENDIF  shift, and go to state 79


state 78

    6 type: ARRAY L_PAREN NUMBER R_PAREN OF . INTEGER

    INTEGER  shift, and go to state 80


state 79

    8 conditional: IF condition THEN statements ELSE statements ENDIF .

    $default  reduce using rule 8 (conditional)


state 80

    6 type: ARRAY L_PAREN NUMBER R_PAREN OF INTEGER .

    $default  reduce using rule 6 (type)
