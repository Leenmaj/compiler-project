Terminals unused in grammar

    VAR


Grammar

    0 $accept: prog $end

    1 prog: PROGRAM IDENT SEMICOLON declarations BEGIN_PROGRAM statements END_PROGRAM

    2 declaration: identifiers COLON type
    3            | IDENT COMMA error

    4 type: INTEGER
    5     | ARRAY L_PAREN NUMBER R_PAREN OF INTEGER
    6     | ARRAY L_PAREN error R_PAREN OF INTEGER
    7     | ARRAY error

    8 declarations: ε
    9             | declaration SEMICOLON declarations
   10             | declaration error

   11 identifiers: IDENT
   12            | IDENT COMMA identifiers

   13 $@1: ε

   14 identifiers: IDENT COMMA error $@1 identifiers

   15 statements: ε
   16           | statement SEMICOLON statements
   17           | statement error

   18 statement: var ASSIGN expression
   19          | var error expression
   20          | IF condition THEN statements ENDIF
   21          | IF condition THEN statements ELSE statements ENDIF
   22          | WHILE condition LOOP statements ENDLOOP
   23          | READ vars
   24          | WRITE vars
   25          | IF condition THEN error ENDIF
   26          | WHILE condition LOOP error ENDLOOP
   27          | WHILE condition error
   28          | READ error
   29          | WRITE error

   30 condition: condition OR condition
   31          | condition AND condition
   32          | NOT condition
   33          | expression comp_op expression
   34          | TRUE
   35          | FALSE
   36          | condition OR error
   37          | condition AND error
   38          | NOT error
   39          | expression error expression

   40 comp_op: EQ
   41        | NEQ
   42        | LT
   43        | LTE
   44        | GT
   45        | GTE

   46 expression: term
   47           | term ADD expression
   48           | term SUB expression
   49           | term ADD error
   50           | term SUB error

   51 term: factor
   52     | factor MULT term
   53     | factor DIV term
   54     | factor MULT error
   55     | factor DIV error

   56 factor: NUMBER
   57       | IDENT
   58       | L_PAREN expression R_PAREN
   59       | L_PAREN error R_PAREN
   60       | L_PAREN expression error
   61       | array_subscript

   62 var: IDENT
   63    | array_subscript

   64 array_subscript: IDENT L_PAREN expression R_PAREN
   65                | IDENT L_PAREN error R_PAREN
   66                | IDENT L_PAREN expression error

   67 vars: var
   68     | var COMMA vars
   69     | var COMMA error


Terminals, with rules where they appear

    $end (0) 0
    error (256) 3 6 7 10 14 17 19 25 26 27 28 29 36 37 38 39 49 50 54 55 59 60 65 66 69
    PROGRAM (258) 1
    BEGIN_PROGRAM (259) 1
    END_PROGRAM (260) 1
    INTEGER (261) 4 5 6
    ARRAY (262) 5 6 7
    OF (263) 5 6
    READ (264) 23 28
    WRITE (265) 24 29
    IF (266) 20 21 25
    THEN (267) 20 21 25
    ELSE (268) 21
    ENDIF (269) 20 21 25
    WHILE (270) 22 26 27
    LOOP (271) 22 26
    ENDLOOP (272) 22 26
    ADD (273) 47 49
    SUB (274) 48 50
    MULT (275) 52 54
    DIV (276) 53 55
    EQ (277) 40
    NEQ (278) 41
    LT (279) 42
    GT (280) 44
    LTE (281) 43
    GTE (282) 45
    ASSIGN (283) 18
    COMMA (284) 3 12 14 68 69
    COLON (285) 2
    SEMICOLON (286) 1 9 16
    L_PAREN (287) 5 6 58 59 60 64 65 66
    R_PAREN (288) 5 6 58 59 64 65
    IDENT <sval> (289) 1 3 11 12 14 57 62 64 65 66
    NUMBER <ival> (290) 5 56
    VAR (291)
    AND (292) 31 37
    OR (293) 30 36
    NOT (294) 32 38
    TRUE (295) 34
    FALSE (296) 35


Nonterminals, with rules where they appear

    $accept (42)
        on left: 0
    prog (43)
        on left: 1
        on right: 0
    declaration (44)
        on left: 2 3
        on right: 9 10
    type (45)
        on left: 4 5 6 7
        on right: 2
    declarations (46)
        on left: 8 9 10
        on right: 1 9
    identifiers (47)
        on left: 11 12 14
        on right: 2 12 14
    $@1 (48)
        on left: 13
        on right: 14
    statements (49)
        on left: 15 16 17
        on right: 1 16 20 21 22
    statement (50)
        on left: 18 19 20 21 22 23 24 25 26 27 28 29
        on right: 16 17
    condition (51)
        on left: 30 31 32 33 34 35 36 37 38 39
        on right: 20 21 22 25 26 27 30 31 32 36 37
    comp_op (52)
        on left: 40 41 42 43 44 45
        on right: 33
    expression (53)
        on left: 46 47 48 49 50
        on right: 18 19 33 39 47 48 58 60 64 66
    term (54)
        on left: 51 52 53 54 55
        on right: 46 47 48 49 50 52 53
    factor (55)
        on left: 56 57 58 59 60 61
        on right: 51 52 53 54 55
    var (56)
        on left: 62 63
        on right: 18 19 67 68 69
    array_subscript (57)
        on left: 64 65 66
        on right: 61 63
    vars (58)
        on left: 67 68 69
        on right: 23 24 68


State 0

    0 $accept: • prog $end

    PROGRAM  shift, and go to state 1

    prog  go to state 2


State 1

    1 prog: PROGRAM • IDENT SEMICOLON declarations BEGIN_PROGRAM statements END_PROGRAM

    IDENT  shift, and go to state 3


State 2

    0 $accept: prog • $end

    $end  shift, and go to state 4


State 3

    1 prog: PROGRAM IDENT • SEMICOLON declarations BEGIN_PROGRAM statements END_PROGRAM

    SEMICOLON  shift, and go to state 5


State 4

    0 $accept: prog $end •

    $default  accept


State 5

    1 prog: PROGRAM IDENT SEMICOLON • declarations BEGIN_PROGRAM statements END_PROGRAM

    IDENT  shift, and go to state 6

    $default  reduce using rule 8 (declarations)

    declaration   go to state 7
    declarations  go to state 8
    identifiers   go to state 9


State 6

    3 declaration: IDENT • COMMA error
   11 identifiers: IDENT •
   12            | IDENT • COMMA identifiers
   14            | IDENT • COMMA error $@1 identifiers

    COMMA  shift, and go to state 10

    $default  reduce using rule 11 (identifiers)


State 7

    9 declarations: declaration • SEMICOLON declarations
   10             | declaration • error

    error      shift, and go to state 11
    SEMICOLON  shift, and go to state 12


State 8

    1 prog: PROGRAM IDENT SEMICOLON declarations • BEGIN_PROGRAM statements END_PROGRAM

    BEGIN_PROGRAM  shift, and go to state 13


State 9

    2 declaration: identifiers • COLON type

    COLON  shift, and go to state 14


State 10

    3 declaration: IDENT COMMA • error
   12 identifiers: IDENT COMMA • identifiers
   14            | IDENT COMMA • error $@1 identifiers

    error  shift, and go to state 15
    IDENT  shift, and go to state 16

    identifiers  go to state 17


State 11

   10 declarations: declaration error •

    $default  reduce using rule 10 (declarations)


State 12

    9 declarations: declaration SEMICOLON • declarations

    IDENT  shift, and go to state 6

    $default  reduce using rule 8 (declarations)

    declaration   go to state 7
    declarations  go to state 18
    identifiers   go to state 9


State 13

    1 prog: PROGRAM IDENT SEMICOLON declarations BEGIN_PROGRAM • statements END_PROGRAM

    READ   shift, and go to state 19
    WRITE  shift, and go to state 20
    IF     shift, and go to state 21
    WHILE  shift, and go to state 22
    IDENT  shift, and go to state 23

    $default  reduce using rule 15 (statements)

    statements       go to state 24
    statement        go to state 25
    var              go to state 26
    array_subscript  go to state 27


State 14

    2 declaration: identifiers COLON • type

    INTEGER  shift, and go to state 28
    ARRAY    shift, and go to state 29

    type  go to state 30


State 15

    3 declaration: IDENT COMMA error •
   14 identifiers: IDENT COMMA error • $@1 identifiers

    IDENT     reduce using rule 13 ($@1)
    $default  reduce using rule 3 (declaration)

    $@1  go to state 31


State 16

   11 identifiers: IDENT •
   12            | IDENT • COMMA identifiers
   14            | IDENT • COMMA error $@1 identifiers

    COMMA  shift, and go to state 32

    $default  reduce using rule 11 (identifiers)


State 17

   12 identifiers: IDENT COMMA identifiers •

    $default  reduce using rule 12 (identifiers)


State 18

    9 declarations: declaration SEMICOLON declarations •

    $default  reduce using rule 9 (declarations)


State 19

   23 statement: READ • vars
   28          | READ • error

    error  shift, and go to state 33
    IDENT  shift, and go to state 23

    var              go to state 34
    array_subscript  go to state 27
    vars             go to state 35


State 20

   24 statement: WRITE • vars
   29          | WRITE • error

    error  shift, and go to state 36
    IDENT  shift, and go to state 23

    var              go to state 34
    array_subscript  go to state 27
    vars             go to state 37


State 21

   20 statement: IF • condition THEN statements ENDIF
   21          | IF • condition THEN statements ELSE statements ENDIF
   25          | IF • condition THEN error ENDIF

    L_PAREN  shift, and go to state 38
    IDENT    shift, and go to state 39
    NUMBER   shift, and go to state 40
    NOT      shift, and go to state 41
    TRUE     shift, and go to state 42
    FALSE    shift, and go to state 43

    condition        go to state 44
    expression       go to state 45
    term             go to state 46
    factor           go to state 47
    array_subscript  go to state 48


State 22

   22 statement: WHILE • condition LOOP statements ENDLOOP
   26          | WHILE • condition LOOP error ENDLOOP
   27          | WHILE • condition error

    L_PAREN  shift, and go to state 38
    IDENT    shift, and go to state 39
    NUMBER   shift, and go to state 40
    NOT      shift, and go to state 41
    TRUE     shift, and go to state 42
    FALSE    shift, and go to state 43

    condition        go to state 49
    expression       go to state 45
    term             go to state 46
    factor           go to state 47
    array_subscript  go to state 48


State 23

   62 var: IDENT •
   64 array_subscript: IDENT • L_PAREN expression R_PAREN
   65                | IDENT • L_PAREN error R_PAREN
   66                | IDENT • L_PAREN expression error

    L_PAREN  shift, and go to state 50

    $default  reduce using rule 62 (var)


State 24

    1 prog: PROGRAM IDENT SEMICOLON declarations BEGIN_PROGRAM statements • END_PROGRAM

    END_PROGRAM  shift, and go to state 51


State 25

   16 statements: statement • SEMICOLON statements
   17           | statement • error

    error      shift, and go to state 52
    SEMICOLON  shift, and go to state 53


State 26

   18 statement: var • ASSIGN expression
   19          | var • error expression

    error   shift, and go to state 54
    ASSIGN  shift, and go to state 55


State 27

   63 var: array_subscript •

    $default  reduce using rule 63 (var)


State 28

    4 type: INTEGER •

    $default  reduce using rule 4 (type)


State 29

    5 type: ARRAY • L_PAREN NUMBER R_PAREN OF INTEGER
    6     | ARRAY • L_PAREN error R_PAREN OF INTEGER
    7     | ARRAY • error

    error    shift, and go to state 56
    L_PAREN  shift, and go to state 57


State 30

    2 declaration: identifiers COLON type •

    $default  reduce using rule 2 (declaration)


State 31

   14 identifiers: IDENT COMMA error $@1 • identifiers

    IDENT  shift, and go to state 16

    identifiers  go to state 58


State 32

   12 identifiers: IDENT COMMA • identifiers
   14            | IDENT COMMA • error $@1 identifiers

    error  shift, and go to state 59
    IDENT  shift, and go to state 16

    identifiers  go to state 17


State 33

   28 statement: READ error •

    $default  reduce using rule 28 (statement)


State 34

   67 vars: var •
   68     | var • COMMA vars
   69     | var • COMMA error

    COMMA  shift, and go to state 60

    $default  reduce using rule 67 (vars)


State 35

   23 statement: READ vars •

    $default  reduce using rule 23 (statement)


State 36

   29 statement: WRITE error •

    $default  reduce using rule 29 (statement)


State 37

   24 statement: WRITE vars •

    $default  reduce using rule 24 (statement)


State 38

   58 factor: L_PAREN • expression R_PAREN
   59       | L_PAREN • error R_PAREN
   60       | L_PAREN • expression error

    error    shift, and go to state 61
    L_PAREN  shift, and go to state 38
    IDENT    shift, and go to state 39
    NUMBER   shift, and go to state 40

    expression       go to state 62
    term             go to state 46
    factor           go to state 47
    array_subscript  go to state 48


State 39

   57 factor: IDENT •
   64 array_subscript: IDENT • L_PAREN expression R_PAREN
   65                | IDENT • L_PAREN error R_PAREN
   66                | IDENT • L_PAREN expression error

    L_PAREN  shift, and go to state 50

    $default  reduce using rule 57 (factor)


State 40

   56 factor: NUMBER •

    $default  reduce using rule 56 (factor)


State 41

   32 condition: NOT • condition
   38          | NOT • error

    error    shift, and go to state 63
    L_PAREN  shift, and go to state 38
    IDENT    shift, and go to state 39
    NUMBER   shift, and go to state 40
    NOT      shift, and go to state 41
    TRUE     shift, and go to state 42
    FALSE    shift, and go to state 43

    condition        go to state 64
    expression       go to state 45
    term             go to state 46
    factor           go to state 47
    array_subscript  go to state 48


State 42

   34 condition: TRUE •

    $default  reduce using rule 34 (condition)


State 43

   35 condition: FALSE •

    $default  reduce using rule 35 (condition)


State 44

   20 statement: IF condition • THEN statements ENDIF
   21          | IF condition • THEN statements ELSE statements ENDIF
   25          | IF condition • THEN error ENDIF
   30 condition: condition • OR condition
   31          | condition • AND condition
   36          | condition • OR error
   37          | condition • AND error

    THEN  shift, and go to state 65
    AND   shift, and go to state 66
    OR    shift, and go to state 67


State 45

   33 condition: expression • comp_op expression
   39          | expression • error expression

    error  shift, and go to state 68
    EQ     shift, and go to state 69
    NEQ    shift, and go to state 70
    LT     shift, and go to state 71
    GT     shift, and go to state 72
    LTE    shift, and go to state 73
    GTE    shift, and go to state 74

    comp_op  go to state 75


State 46

   46 expression: term •
   47           | term • ADD expression
   48           | term • SUB expression
   49           | term • ADD error
   50           | term • SUB error

    ADD  shift, and go to state 76
    SUB  shift, and go to state 77

    $default  reduce using rule 46 (expression)


State 47

   51 term: factor •
   52     | factor • MULT term
   53     | factor • DIV term
   54     | factor • MULT error
   55     | factor • DIV error

    MULT  shift, and go to state 78
    DIV   shift, and go to state 79

    $default  reduce using rule 51 (term)


State 48

   61 factor: array_subscript •

    $default  reduce using rule 61 (factor)


State 49

   22 statement: WHILE condition • LOOP statements ENDLOOP
   26          | WHILE condition • LOOP error ENDLOOP
   27          | WHILE condition • error
   30 condition: condition • OR condition
   31          | condition • AND condition
   36          | condition • OR error
   37          | condition • AND error

    error  shift, and go to state 80
    LOOP   shift, and go to state 81
    AND    shift, and go to state 66
    OR     shift, and go to state 67


State 50

   64 array_subscript: IDENT L_PAREN • expression R_PAREN
   65                | IDENT L_PAREN • error R_PAREN
   66                | IDENT L_PAREN • expression error

    error    shift, and go to state 82
    L_PAREN  shift, and go to state 38
    IDENT    shift, and go to state 39
    NUMBER   shift, and go to state 40

    expression       go to state 83
    term             go to state 46
    factor           go to state 47
    array_subscript  go to state 48


State 51

    1 prog: PROGRAM IDENT SEMICOLON declarations BEGIN_PROGRAM statements END_PROGRAM •

    $default  reduce using rule 1 (prog)


State 52

   17 statements: statement error •

    $default  reduce using rule 17 (statements)


State 53

   16 statements: statement SEMICOLON • statements

    READ   shift, and go to state 19
    WRITE  shift, and go to state 20
    IF     shift, and go to state 21
    WHILE  shift, and go to state 22
    IDENT  shift, and go to state 23

    $default  reduce using rule 15 (statements)

    statements       go to state 84
    statement        go to state 25
    var              go to state 26
    array_subscript  go to state 27


State 54

   19 statement: var error • expression

    L_PAREN  shift, and go to state 38
    IDENT    shift, and go to state 39
    NUMBER   shift, and go to state 40

    expression       go to state 85
    term             go to state 46
    factor           go to state 47
    array_subscript  go to state 48


State 55

   18 statement: var ASSIGN • expression

    L_PAREN  shift, and go to state 38
    IDENT    shift, and go to state 39
    NUMBER   shift, and go to state 40

    expression       go to state 86
    term             go to state 46
    factor           go to state 47
    array_subscript  go to state 48


State 56

    7 type: ARRAY error •

    $default  reduce using rule 7 (type)


State 57

    5 type: ARRAY L_PAREN • NUMBER R_PAREN OF INTEGER
    6     | ARRAY L_PAREN • error R_PAREN OF INTEGER

    error   shift, and go to state 87
    NUMBER  shift, and go to state 88


State 58

   14 identifiers: IDENT COMMA error $@1 identifiers •

    $default  reduce using rule 14 (identifiers)


State 59

   14 identifiers: IDENT COMMA error • $@1 identifiers

    $default  reduce using rule 13 ($@1)

    $@1  go to state 31


State 60

   68 vars: var COMMA • vars
   69     | var COMMA • error

    error  shift, and go to state 89
    IDENT  shift, and go to state 23

    var              go to state 34
    array_subscript  go to state 27
    vars             go to state 90


State 61

   59 factor: L_PAREN error • R_PAREN

    R_PAREN  shift, and go to state 91


State 62

   58 factor: L_PAREN expression • R_PAREN
   60       | L_PAREN expression • error

    error    shift, and go to state 92
    R_PAREN  shift, and go to state 93


State 63

   38 condition: NOT error •

    $default  reduce using rule 38 (condition)


State 64

   30 condition: condition • OR condition
   31          | condition • AND condition
   32          | NOT condition •
   36          | condition • OR error
   37          | condition • AND error

    $default  reduce using rule 32 (condition)


State 65

   20 statement: IF condition THEN • statements ENDIF
   21          | IF condition THEN • statements ELSE statements ENDIF
   25          | IF condition THEN • error ENDIF

    error  shift, and go to state 94
    READ   shift, and go to state 19
    WRITE  shift, and go to state 20
    IF     shift, and go to state 21
    WHILE  shift, and go to state 22
    IDENT  shift, and go to state 23

    ELSE   reduce using rule 15 (statements)
    ENDIF  reduce using rule 15 (statements)

    statements       go to state 95
    statement        go to state 25
    var              go to state 26
    array_subscript  go to state 27


State 66

   31 condition: condition AND • condition
   37          | condition AND • error

    error    shift, and go to state 96
    L_PAREN  shift, and go to state 38
    IDENT    shift, and go to state 39
    NUMBER   shift, and go to state 40
    NOT      shift, and go to state 41
    TRUE     shift, and go to state 42
    FALSE    shift, and go to state 43

    condition        go to state 97
    expression       go to state 45
    term             go to state 46
    factor           go to state 47
    array_subscript  go to state 48


State 67

   30 condition: condition OR • condition
   36          | condition OR • error

    error    shift, and go to state 98
    L_PAREN  shift, and go to state 38
    IDENT    shift, and go to state 39
    NUMBER   shift, and go to state 40
    NOT      shift, and go to state 41
    TRUE     shift, and go to state 42
    FALSE    shift, and go to state 43

    condition        go to state 99
    expression       go to state 45
    term             go to state 46
    factor           go to state 47
    array_subscript  go to state 48


State 68

   39 condition: expression error • expression

    L_PAREN  shift, and go to state 38
    IDENT    shift, and go to state 39
    NUMBER   shift, and go to state 40

    expression       go to state 100
    term             go to state 46
    factor           go to state 47
    array_subscript  go to state 48


State 69

   40 comp_op: EQ •

    $default  reduce using rule 40 (comp_op)


State 70

   41 comp_op: NEQ •

    $default  reduce using rule 41 (comp_op)


State 71

   42 comp_op: LT •

    $default  reduce using rule 42 (comp_op)


State 72

   44 comp_op: GT •

    $default  reduce using rule 44 (comp_op)


State 73

   43 comp_op: LTE •

    $default  reduce using rule 43 (comp_op)


State 74

   45 comp_op: GTE •

    $default  reduce using rule 45 (comp_op)


State 75

   33 condition: expression comp_op • expression

    L_PAREN  shift, and go to state 38
    IDENT    shift, and go to state 39
    NUMBER   shift, and go to state 40

    expression       go to state 101
    term             go to state 46
    factor           go to state 47
    array_subscript  go to state 48


State 76

   47 expression: term ADD • expression
   49           | term ADD • error

    error    shift, and go to state 102
    L_PAREN  shift, and go to state 38
    IDENT    shift, and go to state 39
    NUMBER   shift, and go to state 40

    expression       go to state 103
    term             go to state 46
    factor           go to state 47
    array_subscript  go to state 48


State 77

   48 expression: term SUB • expression
   50           | term SUB • error

    error    shift, and go to state 104
    L_PAREN  shift, and go to state 38
    IDENT    shift, and go to state 39
    NUMBER   shift, and go to state 40

    expression       go to state 105
    term             go to state 46
    factor           go to state 47
    array_subscript  go to state 48


State 78

   52 term: factor MULT • term
   54     | factor MULT • error

    error    shift, and go to state 106
    L_PAREN  shift, and go to state 38
    IDENT    shift, and go to state 39
    NUMBER   shift, and go to state 40

    term             go to state 107
    factor           go to state 47
    array_subscript  go to state 48


State 79

   53 term: factor DIV • term
   55     | factor DIV • error

    error    shift, and go to state 108
    L_PAREN  shift, and go to state 38
    IDENT    shift, and go to state 39
    NUMBER   shift, and go to state 40

    term             go to state 109
    factor           go to state 47
    array_subscript  go to state 48


State 80

   27 statement: WHILE condition error •

    $default  reduce using rule 27 (statement)


State 81

   22 statement: WHILE condition LOOP • statements ENDLOOP
   26          | WHILE condition LOOP • error ENDLOOP

    error  shift, and go to state 110
    READ   shift, and go to state 19
    WRITE  shift, and go to state 20
    IF     shift, and go to state 21
    WHILE  shift, and go to state 22
    IDENT  shift, and go to state 23

    ENDLOOP  reduce using rule 15 (statements)

    statements       go to state 111
    statement        go to state 25
    var              go to state 26
    array_subscript  go to state 27


State 82

   65 array_subscript: IDENT L_PAREN error • R_PAREN

    R_PAREN  shift, and go to state 112


State 83

   64 array_subscript: IDENT L_PAREN expression • R_PAREN
   66                | IDENT L_PAREN expression • error

    error    shift, and go to state 113
    R_PAREN  shift, and go to state 114


State 84

   16 statements: statement SEMICOLON statements •

    $default  reduce using rule 16 (statements)


State 85

   19 statement: var error expression •

    $default  reduce using rule 19 (statement)


State 86

   18 statement: var ASSIGN expression •

    $default  reduce using rule 18 (statement)


State 87

    6 type: ARRAY L_PAREN error • R_PAREN OF INTEGER

    R_PAREN  shift, and go to state 115


State 88

    5 type: ARRAY L_PAREN NUMBER • R_PAREN OF INTEGER

    R_PAREN  shift, and go to state 116


State 89

   69 vars: var COMMA error •

    $default  reduce using rule 69 (vars)


State 90

   68 vars: var COMMA vars •

    $default  reduce using rule 68 (vars)


State 91

   59 factor: L_PAREN error R_PAREN •

    $default  reduce using rule 59 (factor)


State 92

   60 factor: L_PAREN expression error •

    $default  reduce using rule 60 (factor)


State 93

   58 factor: L_PAREN expression R_PAREN •

    $default  reduce using rule 58 (factor)


State 94

   25 statement: IF condition THEN error • ENDIF

    ENDIF  shift, and go to state 117


State 95

   20 statement: IF condition THEN statements • ENDIF
   21          | IF condition THEN statements • ELSE statements ENDIF

    ELSE   shift, and go to state 118
    ENDIF  shift, and go to state 119


State 96

   37 condition: condition AND error •

    $default  reduce using rule 37 (condition)


State 97

   30 condition: condition • OR condition
   31          | condition • AND condition
   31          | condition AND condition •
   36          | condition • OR error
   37          | condition • AND error

    $default  reduce using rule 31 (condition)


State 98

   36 condition: condition OR error •

    $default  reduce using rule 36 (condition)


State 99

   30 condition: condition • OR condition
   30          | condition OR condition •
   31          | condition • AND condition
   36          | condition • OR error
   37          | condition • AND error

    AND  shift, and go to state 66

    $default  reduce using rule 30 (condition)


State 100

   39 condition: expression error expression •

    $default  reduce using rule 39 (condition)


State 101

   33 condition: expression comp_op expression •

    $default  reduce using rule 33 (condition)


State 102

   49 expression: term ADD error •

    $default  reduce using rule 49 (expression)


State 103

   47 expression: term ADD expression •

    $default  reduce using rule 47 (expression)


State 104

   50 expression: term SUB error •

    $default  reduce using rule 50 (expression)


State 105

   48 expression: term SUB expression •

    $default  reduce using rule 48 (expression)


State 106

   54 term: factor MULT error •

    $default  reduce using rule 54 (term)


State 107

   52 term: factor MULT term •

    $default  reduce using rule 52 (term)


State 108

   55 term: factor DIV error •

    $default  reduce using rule 55 (term)


State 109

   53 term: factor DIV term •

    $default  reduce using rule 53 (term)


State 110

   26 statement: WHILE condition LOOP error • ENDLOOP

    ENDLOOP  shift, and go to state 120


State 111

   22 statement: WHILE condition LOOP statements • ENDLOOP

    ENDLOOP  shift, and go to state 121


State 112

   65 array_subscript: IDENT L_PAREN error R_PAREN •

    $default  reduce using rule 65 (array_subscript)


State 113

   66 array_subscript: IDENT L_PAREN expression error •

    $default  reduce using rule 66 (array_subscript)


State 114

   64 array_subscript: IDENT L_PAREN expression R_PAREN •

    $default  reduce using rule 64 (array_subscript)


State 115

    6 type: ARRAY L_PAREN error R_PAREN • OF INTEGER

    OF  shift, and go to state 122


State 116

    5 type: ARRAY L_PAREN NUMBER R_PAREN • OF INTEGER

    OF  shift, and go to state 123


State 117

   25 statement: IF condition THEN error ENDIF •

    $default  reduce using rule 25 (statement)


State 118

   21 statement: IF condition THEN statements ELSE • statements ENDIF

    READ   shift, and go to state 19
    WRITE  shift, and go to state 20
    IF     shift, and go to state 21
    WHILE  shift, and go to state 22
    IDENT  shift, and go to state 23

    $default  reduce using rule 15 (statements)

    statements       go to state 124
    statement        go to state 25
    var              go to state 26
    array_subscript  go to state 27


State 119

   20 statement: IF condition THEN statements ENDIF •

    $default  reduce using rule 20 (statement)


State 120

   26 statement: WHILE condition LOOP error ENDLOOP •

    $default  reduce using rule 26 (statement)


State 121

   22 statement: WHILE condition LOOP statements ENDLOOP •

    $default  reduce using rule 22 (statement)


State 122

    6 type: ARRAY L_PAREN error R_PAREN OF • INTEGER

    INTEGER  shift, and go to state 125


State 123

    5 type: ARRAY L_PAREN NUMBER R_PAREN OF • INTEGER

    INTEGER  shift, and go to state 126


State 124

   21 statement: IF condition THEN statements ELSE statements • ENDIF

    ENDIF  shift, and go to state 127


State 125

    6 type: ARRAY L_PAREN error R_PAREN OF INTEGER •

    $default  reduce using rule 6 (type)


State 126

    5 type: ARRAY L_PAREN NUMBER R_PAREN OF INTEGER •

    $default  reduce using rule 5 (type)


State 127

   21 statement: IF condition THEN statements ELSE statements ENDIF •

    $default  reduce using rule 21 (statement)
